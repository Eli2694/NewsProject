name: dockercompose9634316846165645934
services:
  mssql:
    container_name: mssql
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: password@12345
    hostname: mssql
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 1433
      published: "1433"
      protocol: tcp
    restart: always
    user: root
    volumes:
    - type: volume
      source: data
      target: /var/opt/mssql/data
      volume: {}
    - type: volume
      source: log
      target: /var/opt/mssql/log
      volume: {}
  news.api:
    build:
      context: C:\ZionNet\news\NewsProject
      dockerfile: News.API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: News.API
    container_name: news.server
    depends_on:
      mssql:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DB_HOST: mssql
      DB_NAME: KLA_Project
      DB_SA_PASSWORD: password@12345
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /root/.nuget/fallbackpackages
    image: newsapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages  "/app/bin/Debug/net6.0/News.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\ZionNet\news\NewsProject\News.API
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\ZionNet\news\NewsProject
      target: /src
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\User\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\User\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages
      target: /root/.nuget/fallbackpackages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\User\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\User\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
networks:
  default:
    name: dockercompose9634316846165645934_default
volumes:
  data:
    name: dockercompose9634316846165645934_data
  log:
    name: dockercompose9634316846165645934_log